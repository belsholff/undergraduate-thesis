
@inproceedings{morris_click_1999,
	address = {New York, NY, USA},
	series = {{SOSP} '99},
	title = {The {Click} {Modular} {Router}},
	isbn = {978-1-58113-140-6},
	url = {http://doi.acm.org/10.1145/319151.319166},
	doi = {10.1145/319151.319166},
	abstract = {Click is a new software architecture for building flexible and configurable routers. A Click router is assembled from packet processing modules called elements. Individual elements implement simple router functions like packet classification, queueing, scheduling, and interfacing with network devices. Complete configurations are built by connecting elements into a graph; packets flow along the graph's edges. Several features make individual elements more powerful and complex configurations easier to write, including pull processing, which models packet flow driven by transmitting interfaces, and flow-based router context, which helps an element locate other interesting elements.We demonstrate several working configurations, including an IP router and an Ethernet bridge. These configurations are modular---the IP router has 16 elements on the forwarding path---and easy to extend by adding additional elements, which we demonstrate with augmented configurations. On commodity PC hardware running Linux, the Click IP router can forward 64-byte packets at 73,000 packets per second, just 10\% slower than Linux alone.},
	urldate = {2017-01-26},
	booktitle = {Proceedings of the {Seventeenth} {ACM} {Symposium} on {Operating} {Systems} {Principles}},
	publisher = {ACM},
	author = {Morris, Robert and Kohler, Eddie and Jannotti, John and Kaashoek, M. Frans},
	year = {1999},
	pages = {217--231},
	file = {ACM Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/QCVJ6HZE/Morris et al. - 1999 - The Click Modular Router.pdf:application/pdf}
}

@phdthesis{wu_network_2015,
	title = {A {Network} {Function} {Virtualization} based {Load} {Balancer} for {TCP}},
	url = {https://repository.asu.edu/attachments/163978/content/Wu_asu_0010N_15544.pdf},
	language = {InglÃªs},
	urldate = {2017-09-27},
	school = {ARIZONA STATE UNIVERSITY},
	author = {Wu, Jinxuan},
	month = dec,
	year = {2015},
	file = {20,9M - Wu_asu_0010N_15544.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/MKNM69M8/Wu_asu_0010N_15544.html:text/html}
}

@article{mijumbi_management_2016,
	title = {Management and orchestration challenges in network functions virtualization},
	volume = {54},
	issn = {0163-6804},
	doi = {10.1109/MCOM.2016.7378433},
	abstract = {NFV continues to draw immense attention from researchers in both industry and academia. By decoupling NFs from the physical equipment on which they run, NFV promises to reduce CAPEX and OPEX, make networks more scalable and flexible, and lead to increased service agility. However, despite the unprecedented interest it has gained, there are still obstacles that must be overcome before NFV can advance to reality in industrial deployments, let alone delivering on the anticipated gains. While doing so, important challenges associated with network and function MANO need to be addressed. In this article, we introduce NFV and give an overview of the MANO framework that has been proposed by ETSI. We then present representative projects and vendor products that focus on MANO, and discuss their features and relationship with the framework. Finally, we identify open MANO challenges as well as opportunities for future research.},
	number = {1},
	journal = {IEEE Communications Magazine},
	author = {Mijumbi, R. and Serrat, J. and Gorricho, J. l and Latre, S. and Charalambides, M. and Lopez, D.},
	month = jan,
	year = {2016},
	keywords = {CAPEX reduction, capital expenditure reduction, cloud computing, Computer architecture, computer network management, Data models, ETSI, European Telecommunication Standard Institute, management and orchestration framework, MANO framework, network function virtualization, NFV, operating expenditure reduction, OPEX reduction, service agility, Systems support, Telecommunication network management, toRead, virtualisation},
	pages = {98--105},
	file = {IEEE Xplore Abstract Record:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/583EVMKS/7378433.html:text/html;IEEE Xplore Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/G6GJS32U/Mijumbi et al. - 2016 - Management and orchestration challenges in network.pdf:application/pdf}
}

@article{mijumbi_network_2016,
	title = {Network {Function} {Virtualization}: {State}-of-the-{Art} and {Research} {Challenges}},
	volume = {18},
	issn = {1553-877X},
	shorttitle = {Network {Function} {Virtualization}},
	doi = {10.1109/COMST.2015.2477041},
	abstract = {Network function virtualization (NFV) has drawn significant attention from both industry and academia as an important shift in telecommunication service provisioning. By decoupling network functions (NFs) from the physical devices on which they run, NFV has the potential to lead to significant reductions in operating expenses (OPEX) and capital expenses (CAPEX) and facilitate the deployment of new services with increased agility and faster time-to-value. The NFV paradigm is still in its infancy and there is a large spectrum of opportunities for the research community to develop new architectures, systems and applications, and to evaluate alternatives and trade-offs in developing technologies for its successful deployment. In this paper, after discussing NFV and its relationship with complementary fields of software defined networking (SDN) and cloud computing, we survey the state-of-the-art in NFV, and identify promising research directions in this area. We also overview key NFV projects, standardization efforts, early implementations, use cases, and commercial products.},
	number = {1},
	journal = {IEEE Communications Surveys Tutorials},
	author = {Mijumbi, R. and Serrat, J. and Gorricho, J. L. and Bouten, N. and Turck, F. De and Boutaba, R.},
	year = {2016},
	keywords = {capital expenses, cloud computing, decoupling network functions, future Internet, Hardware, III-V semiconductor materials, Indium phosphide, network function virtualization, NFV paradigm, operating expenses, SDN, Servers, Software, software defined networking, standardization, telecommunication service provisioning, telecommunication services, Tutorials, Virtualization, virtual network functions},
	pages = {236--262},
	file = {IEEE Xplore Abstract Record:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/UXIPFS9W/7243304.html:text/html;IEEE Xplore Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/JGUXWHEN/Mijumbi et al. - 2016 - Network Function Virtualization State-of-the-Art .pdf:application/pdf}
}

@inproceedings{kohler_modular_2002,
	title = {Modular components for network address translation},
	isbn = {978-0-7803-7457-7},
	url = {http://ieeexplore.ieee.org/document/1019227/},
	doi = {10.1109/OPNARC.2002.1019227},
	urldate = {2017-11-29},
	publisher = {IEEE},
	author = {Kohler, E. and Morris, R. and Poletto, M.},
	year = {2002},
	pages = {39--50},
	file = {01019227.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/7EWBQFR3/01019227.pdf:application/pdf}
}

@techreport{halpern_service_2015,
	title = {Service {Function} {Chaining} ({SFC}) {Architecture}},
	url = {https://www.rfc-editor.org/info/rfc7665},
	language = {en},
	number = {RFC7665},
	urldate = {2017-09-27},
	institution = {RFC Editor},
	author = {Halpern, J. and Pignataro, C.},
	month = oct,
	year = {2015},
	doi = {10.17487/RFC7665}
}

@misc{rfc768,
	series =	{Request for Comments},
	number =	768,
	howpublished =	{RFC 768},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0768},
	url =		{https://rfc-editor.org/rfc/rfc768.txt},
        author =	{},
	title =		{{User Datagram Protocol}},
	pagetotal =	3,
	year =		1980,
	month =		aug,
	abstract =	{},
}

@article{han_network_2015,
	title = {Network function virtualization: {Challenges} and opportunities for innovations},
	volume = {53},
	issn = {0163-6804},
	shorttitle = {Network function virtualization},
	doi = {10.1109/MCOM.2015.7045396},
	abstract = {Network function virtualization was recently proposed to improve the flexibility of network service provisioning and reduce the time to market of new services. By leveraging virtualization technologies and commercial off-the-shelf programmable hardware, such as general-purpose servers, storage, and switches, NFV decouples the software implementation of network functions from the underlying hardware. As an emerging technology, NFV brings several challenges to network operators, such as the guarantee of network performance for virtual appliances, their dynamic instantiation and migration, and their efficient placement. In this article, we provide a brief overview of NFV, explain its requirements and architectural framework, present several use cases, and discuss the challenges and future directions in this burgeoning research area.},
	number = {2},
	journal = {IEEE Communications Magazine},
	author = {Han, B. and Gopalakrishnan, V. and Ji, L. and Lee, S.},
	year = {2015},
	keywords = {commercial off-the-shelf programmable hardware, computer networks, Hardware, Home appliances, network function virtualization, network performance, Network security, network service provisioning, Servers, software implementation, Time to market, toRead, virtual appliances, virtualisation, Virtualization},
	pages = {90--97},
	file = {IEEE Xplore Abstract Record:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/F6G84PR2/7045396.html:text/html;IEEE Xplore Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/8JZC8MK4/Han et al. - 2015 - Network function virtualization Challenges and op.pdf:application/pdf}
}

@inproceedings{martins_enabling_2013,
	address = {New York, NY, USA},
	series = {{HotSDN} '13},
	title = {Enabling {Fast}, {Dynamic} {Network} {Processing} with {clickOS}},
	isbn = {978-1-4503-2178-5},
	url = {http://doi.acm.org/10.1145/2491185.2491195},
	doi = {10.1145/2491185.2491195},
	urldate = {2017-03-15},
	booktitle = {Proceedings of the {Second} {ACM} {SIGCOMM} {Workshop} on {Hot} {Topics} in {Software} {Defined} {Networking}},
	publisher = {ACM},
	author = {Martins, Joao and Ahmed, Mohamed and Raiciu, Costin and Huici, Felipe},
	year = {2013},
	keywords = {clickos, middleboxes, NFV, SDN, Virtualization, xen},
	pages = {67--72},
	file = {ACM Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/45PJKTTN/Martins et al. - 2013 - Enabling Fast, Dynamic Network Processing with cli.pdf:application/pdf}
}

@inproceedings{laufer_climb:_2016,
	address = {New York, NY, USA},
	series = {{HotMIddlebox} '16},
	title = {{CliMB}: {Enabling} {Network} {Function} {Composition} with {Click} {Middleboxes}},
	isbn = {978-1-4503-4424-1},
	shorttitle = {{CliMB}},
	url = {http://doi.acm.org/2940147.2940152},
	doi = {2940147.2940152},
	abstract = {Click has significant advantages for middlebox development, including modularity, extensibility, and reprogrammability. Despite these features, Click still has no native TCP support and only uses nonblocking I/O, preventing its applicability to middleboxes that require access to L7 data and blocking I/O. We bridge this gap by introducing Click middleboxes (CliMB). CliMB provides a full-fledged modular TCP layer supporting congestion control, TCP options, both blocking and nonblocking I/O, as well as socket and zero-copy APIs to applications. As a result, any TCP network function may now be realized in Click. As proof of concept, we develop a zero-copy SOCKS proxy server using CliMB that shows up to 4x gains compared to an equivalent implementation using the Linux in-kernel network stack.},
	urldate = {2017-01-26},
	booktitle = {Proceedings of the 2016 {Workshop} on {Hot} {Topics} in {Middleboxes} and {Network} {Function} {Virtualization}},
	publisher = {ACM},
	author = {Laufer, Rafael and Gallo, Massimo and Perino, Diego and Nandugudi, Anandatirtha},
	year = {2016},
	keywords = {Click router, Network middleboxes, Programmable middleboxes},
	pages = {50--55},
	file = {ACM Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/89XAQZB6/Laufer et al. - 2016 - CliMB Enabling Network Function Composition with .pdf:application/pdf}
}

@inproceedings{bondan_management_2014,
	title = {Management requirements for {ClickOS}-based {Network} {Function} {Virtualization}},
	doi = {10.1109/CNSM.2014.7014210},
	abstract = {Network Functions Virtualization (NFV) is a new approach to design, deploy, and manage network functions. In a recent past, such functions used to be implemented at hardware. This approach, besides effective, presents many disadvantages such as increased operational costs, difficulties to scale up or down the network, and deploy new functions. The rise of virtualization technologies, on the other side, provides new ways to rethink about network functions. Instead of specialized and expensive hardware, multiple network functions can share the same commodity hardware, thus contributing to a better utilization of resources. Besides its advantages, NFV is still on its early stages of employment. Important aspects are not yet being investigated by the research community. For example, to this date, the management requirements of NFV remain unclear. Therefore, the present paper addresses this subject, it presents a realistic network function request, which is used to identify management requirements in the context of a specific NFV enabler platform called ClickOS.},
	booktitle = {10th {International} {Conference} on {Network} and {Service} {Management} ({CNSM}) and {Workshop}},
	author = {Bondan, L. and Santos, C. R. P. d and Granville, L. Z.},
	month = nov,
	year = {2014},
	keywords = {Bridges, ClickOS-based network function virtualization, commodity hardware, computer network management, Context, Function Requests, Hardware, Internet, management requirements, Monitoring, multiple network functions, Network Functions Virtualization, Network Management, virtualisation, Virtualization, Web servers},
	pages = {447--450},
	file = {07014210.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/T4SU3Q6U/07014210.pdf:application/pdf;IEEE Xplore Abstract Record:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/SNRMSWF5/7014210.html:text/html}
}

@inproceedings{csoma_escape:_2014,
	address = {New York, NY, USA},
	series = {{SIGCOMM} '14},
	title = {{ESCAPE}: {Extensible} {Service} {Chain} {Prototyping} {Environment} {Using} {Mininet}, {Click}, {NETCONF} and {POX}},
	isbn = {978-1-4503-2836-4},
	shorttitle = {{ESCAPE}},
	url = {http://doi.acm.org/10.1145/2619239.2631448},
	doi = {10.1145/2619239.2631448},
	abstract = {Mininet is a great prototyping tool which combines existing SDN-related software components (e.g., Open vSwitch, OpenFlow controllers, network namespaces, cgroups) into a framework, which can automatically set up and configure customized OpenFlow testbeds scaling up to hundreds of nodes. Standing on the shoulders of Mininet, we implement a similar prototyping system called ESCAPE, which can be used to develop and test various components of the service chaining architecture. Our framework incorporates Click for implementing Virtual Network Functions (VNF), NETCONF for managing Click-based VNFs and POX for taking care of traffic steering. We also add our extensible Orchestrator module, which can accommodate mapping algorithms from abstract service descriptions to deployed and running service chains.},
	booktitle = {Proceedings of the 2014 {ACM} {Conference} on {SIGCOMM}},
	publisher = {ACM},
	author = {Csoma, Attila and Sonkoly, BalÃ¡zs and Csikor, Levente and NÃ©meth, FeliciÃ¡n and Gulyas, AndrÃ s and Tavernier, Wouter and Sahhaf, Sahel},
	year = {2014},
	keywords = {click, mininet, NETCONF, prototyping, SDN, service chain},
	pages = {125--126},
	file = {2619239-2631448.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/AIFT6RNN/2619239-2631448.pdf:application/pdf}
}

@inproceedings{martins_clickos_2014,
	address = {Berkeley, CA, USA},
	series = {{NSDI}'14},
	title = {{ClickOS} and the {Art} of {Network} {Function} {Virtualization}},
	isbn = {978-1-931971-09-6},
	url = {http://dl.acm.org/citation.cfm?id=2616448.2616491},
	abstract = {Over the years middleboxes have become a fundamental part of today's networks. Despite their usefulness, they come with a number of problems, many of which arise from the fact that they are hardware-based: they are costly, difficult to manage, and their functionality is hard or impossible to change, to name a few. To address these issues, there is a recent trend towards network function virtualization (NFV), in essence proposing to turn these middleboxes into software-based, virtualized entities. Towards this goal we introduce ClickOS, a high-performance, virtualized software middlebox platform. ClickOS virtual machines are small (5MB), boot quickly (about 30 milliseconds), add little delay (45 microseconds) and over one hundred of them can be concurrently run while saturating a 10Gb pipe on a commodity server. We further implement a wide range of middleboxes including a firewall, a carrier-grade NAT and a load balancer and show that ClickOS can handle packets in the millions per second.},
	urldate = {2017-01-26},
	booktitle = {Proceedings of the 11th {USENIX} {Conference} on {Networked} {Systems} {Design} and {Implementation}},
	publisher = {USENIX Association},
	author = {Martins, Joao and Ahmed, Mohamed and Raiciu, Costin and Olteanu, Vladimir and Honda, Michio and Bifulco, Roberto and Huici, Felipe},
	year = {2014},
	pages = {459--473},
	file = {nsdi14-paper-martins.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/NS5FS74W/nsdi14-paper-martins.pdf:application/pdf}
}

@inproceedings{ventre_performance_2016,
	title = {Performance evaluation and tuning of {Virtual} {Infrastructure} {Managers} for ({Micro}) {Virtual} {Network} {Functions}},
	isbn = {978-1-5090-0933-6},
	url = {http://ieeexplore.ieee.org/document/7919489/},
	doi = {10.1109/NFV-SDN.2016.7919489},
	urldate = {2017-11-29},
	publisher = {IEEE},
	author = {Ventre, Pier Luigi and Pisa, Claudio and Salsano, Stefano and Siracusano, Giuseppe and Schmidt, Florian and Lungaroni, Paolo and Blefari-Melazzi, Nicola},
	month = nov,
	year = {2016},
	pages = {141--147},
	file = {07919489.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/Z3UCCGS5/07919489.pdf:application/pdf}
}

@article{niu_benchmarking_2016,
	title = {Benchmarking {NFV} {Software} {Dataplanes}},
	abstract = {A key enabling technology of NFV is software dataplane, which has attracted much attention in both academia and industry recently. Yet, till now there is little understanding about its performance in practice. In this paper, we make a benchmark measurement study of NFV software dataplanes in terms of packet processing capability, one of the most fundamental and critical performance metrics. Specifically, we compare two state-of-the-art open-source NFV dataplanes, SoftNIC and ClickOS, using commodity 10GbE NICs under various typical workloads. Our key observations are that (1) both dataplanes have performance issues processing small ({\textless}=128B) packets; (2) it is not always best to put all VMs of a service chain on one server due to NUMA effect. We propose resource allocation strategies to remedy the problems, including carefully adding CPU cores and vNICs to VMs, and spreading VMs of a service chain to separate servers. To fundamentally address these problems and scale their performance, SoftNIC and ClickOS could improve the support for NIC queues and multiple cores.},
	author = {Niu, Zhixiong and Xu, Hong and Tian, Yongqiang and Liu, Libin and Wang, Peng and Li, Zhenhua},
	month = may,
	year = {2016},
	file = {1605.05843v2.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/SETJ3TEE/1605.05843v2.pdf:application/pdf}
}

@inproceedings{rizzo_vale_2012,
	address = {New York, NY, USA},
	series = {{CoNEXT} '12},
	title = {{VALE}, a {Switched} {Ethernet} for {Virtual} {Machines}},
	isbn = {978-1-4503-1775-7},
	url = {http://doi.acm.org/10.1145/2413176.2413185},
	doi = {10.1145/2413176.2413185},
	abstract = {The growing popularity of virtual machines is pushing the demand for high performance communication between them. Past solutions have seen the use of hardware assistance, in the form of "PCI passthrough" (dedicating parts of physical NICs to each virtual machine) and even bouncing traffic through physical switches to handle data forwarding and replication. In this paper we show that, with a proper design, very high speed communication between virtual machines can be achieved completely in software. Our architecture, called VALE, implements a Virtual Local Ethernet that can be used by virtual machines, such as QEMU, KVM and others, as well as by regular processes. VALE achieves a throughput of over 17 million packets per second (Mpps) between host processes, and over 2 Mpps between QEMU instances, without any hardware assistance. VALE is available for both FreeBSD and Linux hosts, and is implemented as a kernel module that extends our recently proposed netmap framework, and uses similar techniques to achieve high packet rates.},
	urldate = {2017-01-26},
	booktitle = {Proceedings of the 8th {International} {Conference} on {Emerging} {Networking} {Experiments} and {Technologies}},
	publisher = {ACM},
	author = {Rizzo, Luigi and Lettieri, Giuseppe},
	year = {2012},
	keywords = {netmap, software switches, virtual machines},
	pages = {61--72},
	file = {ACM Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/PFD2BP96/Rizzo e Lettieri - 2012 - VALE, a Switched Ethernet for Virtual Machines.pdf:application/pdf}
}

@inproceedings{panda_netbricks:_2016,
	address = {Berkeley, CA, USA},
	series = {{OSDI}'16},
	title = {{NetBricks}: {Taking} the {V} out of {NFV}},
	isbn = {978-1-931971-33-1},
	shorttitle = {{NetBricks}},
	url = {http://dl.acm.org/citation.cfm?id=3026877.3026894},
	abstract = {The move from hardware middleboxes to software network functions, as advocated by NFV, has proven more challenging than expected. Developing new NFs remains a tedious process, requiring that developers repeatedly rediscover and reapply the same set of optimizations, while current techniques for providing isolation between NFs (using VMs or containers) incur high performance overheads. In this paper we describe NetBricks, a new NFV framework that tackles both these problems. For building NFs we take inspiration from modern data analytics frameworks (e.g., Spark and Dryad) and build a small set of customizable network processing elements. We also embrace type checking and safe runtimes to provide isolation in software, rather than rely on hardware isolation. NetBricks provides the same memory isolation as containers and VMs, without incurring the same performance penalties. To improve I/O efficiency, we introduce a novel technique called zero-copy software isolation.},
	booktitle = {Proceedings of the 12th {USENIX} {Conference} on {Operating} {Systems} {Design} and {Implementation}},
	publisher = {USENIX Association},
	author = {Panda, Aurojit and Han, Sangjin and Jang, Keon and Walls, Melvin and Ratnasamy, Sylvia and Shenker, Scott},
	year = {2016},
	pages = {203--216},
	file = {osdi16-panda.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/N9X3ERSW/osdi16-panda.pdf:application/pdf}
}

@book{veras2012cloud,
  title={Cloud Computing: nova arquitetura da TI},
  author={Veras, Manoel},
  year={2012},
  publisher={Brasport},
  pages={34--35}
}

@article{etsi2014gs,
  title={GS NFV 003-V1. 2.1-Network Function Virtualisation (NFV): Terminology for Main concepts in NFV},
  author={ETSI, NFVISG},
  journal={publishing December},
  year={2014}
}


@misc{rfc3234,
	series =	{Request for Comments},
	number =	3234,
	howpublished =	{RFC 3234},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC3234},
	url =		{https://rfc-editor.org/rfc/rfc3234.txt},
    author =	{Scott W. Brim and Brian E. Carpenter},
	title =		{{Middleboxes: Taxonomy and Issues}},
	pagetotal =	27,
	year =		2002,
	month =		feb,
	abstract =	{This document is intended as part of an IETF discussion about "middleboxes" - defined as any intermediary box performing functions apart from normal, standard functions of an IP router on the data path between a source host and destination host. This document establishes a catalogue or taxonomy of middleboxes, cites previous and current IETF work concerning middleboxes, and attempts to identify some preliminary conclusions. It does not, however, claim to be definitive. This memo provides information for the Internet community.},
}

@techreport{Mell:2011:SND:2206223,
  author = {Mell, Peter M. and Grance, Timothy},
  title = {SP 800-145. The NIST Definition of Cloud Computing},
  year = {2011},
  publisher = {National Institute of Standards \& Technology},
  address = {Gaithersburg, MD, United States},
  pages={3}
}

@misc{kohler_click:_2018,
	title = {click: {The} {Click} modular router: fast modular packet processing and analysis},
	shorttitle = {click},
	url = {https://github.com/kohler/click},
	author = {Kohler, Eddie},
	month = jun,
	year = {2018},
	note = {original-date: 2010-09-21T22:45:25Z}
}

@misc{noauthor_linux_2018,
	title = {Linux - {The} {Linux} {Foundation}},
	url = {https://www.linuxfoundation.org/projects/linux/},
	urldate = {2018-06-08},
	file = {Linux - The Linux Foundation:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/5DQDJHG8/linux.html:text/html}
}


@inproceedings{barbette_fast_2015,
	address = {Washington, DC, USA},
	series = {{ANCS} '15},
	title = {Fast {Userspace} {Packet} {Processing}},
	isbn = {978-1-4673-6632-8},
	url = {http://dl.acm.org/citation.cfm?id=2772722.2772727},
	abstract = {In recent years, we have witnessed the emergence of high speed packet I/O frameworks, bringing unprecedented network performance to userspace. Using the Click modular router, we first review and quantitatively compare several such packet I/O frameworks, showing their superiority to kernel-based forwarding. We then reconsider the issue of software packet processing, in the context of modern commodity hardware with hardware multi-queues, multi-core processors and non-uniform memory access. Through a combination of existing techniques and improvements of our own, we derive modern general principles for the design of software packet processors. Our implementation of a fast packet processor framework, integrating a faster Click with both Netmap and DPDK, exhibits up-to about 2.3x speed-up compared to other software implementations, when used as an IP router.},
	booktitle = {Proceedings of the {Eleventh} {ACM}/{IEEE} {Symposium} on {Architectures} for {Networking} and {Communications} {Systems}},
	publisher = {IEEE Computer Society},
	author = {Barbette, Tom and Soldani, Cyril and Mathy, Laurent},
	year = {2015},
	keywords = {click modular router, fast packet i/o, high-speed net- working, intel dpdk, multi-queue, netmap, network processing., numa, userspace i/o},
	pages = {5--16},
	file = {userspaceio.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/VJQZRQ3W/userspaceio.pdf:application/pdf}
}

@article{rizzo_revisiting_2012,
	title = {Revisiting {Network} {I}/{O} {APIs}: {The} {Netmap} {Framework}},
	volume = {55},
	issn = {0001-0782},
	shorttitle = {Revisiting {Network} {I}/{O} {APIs}},
	url = {http://doi.acm.org/10.1145/2093548.2093565},
	doi = {10.1145/2093548.2093565},
	abstract = {It is possible to achieve huge performance improvements in the way packet processing is done on modern operating systems.},
	number = {3},
	journal = {Commun. ACM},
	author = {Rizzo, Luigi},
	month = mar,
	year = {2012},
	pages = {45--51},
	file = {ACM Full Text PDF:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/GGXV2TUI/Rizzo - 2012 - Revisiting Network IO APIs The Netmap Framework.pdf:application/pdf}
}

@inproceedings{varis2012anatomy,
  title={Anatomy of a Linux bridge},
  author={Varis, Nuutti},
  booktitle={Proceedings of Seminar on Network Protocols in Operating Systems},
  pages={58},
  year={2012}
}

@article{pfaff_extending_2009,
	title = {Extending {Networking} into the {Virtualization} {Layer}},
	abstract = {The move to virtualization has created a new network access layer residing on hosts that connects the various VMs. Virtualized deployment environments impose re- quirements on networking for which traditional models are not well suited. They also provide advantages to the networking layer (such as software flexibility and well- defined end host events) that are not present in physical networks. To date, this new virtualization network layer has been largely built around standard Ethernet switching, but this technology neither satisfies these new requirements nor leverages the available advantages. We present Open vSwitch, a network switch specifically built for virtual environments. Open vSwitch differs from traditional approaches in that it exports an external interface for fine-grained control of configuration state and forwarding behavior. We describe how Open vSwitch can be used to tackle problems such as isolation in joint-tenant environments, mobility across subnets, and distributing configuration and visibility across hosts.},
	author = {Pfaff, Ben and Pettit, Justin and Koponen, Teemu and Amidon, Keith and Casado, Martin and Shenkerz, Scott},
	booktitle = {In: 8th ACM Workshop on Hot Topics inNetworks (HotNets-VIII).New YorkCity,NY(October 2009},
	month = jan,
	year = {2009},
	file = {OpenVSwitch09.pdf:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/GWTCDIPC/OpenVSwitch09.pdf:application/pdf}
}

@phdthesis{kuroda2013analise,
  title={An{\'a}lise de desempenho de interfaces de rede virtualizadas com Napi},
  author={Kuroda, Eduardo Hideo},
  year={2013},
  school={Universidade de S{\~a}o Paulo}
}

@misc{noauthor_xen_nodate,
	title = {Xen {Networking} - {Xen}},
	url = {https://wiki.xen.org/wiki/Xen_Networking},
	urldate = {2018-06-17},
	file = {Xen Networking - Xen:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/V2MTJRUH/Xen_Networking.html:text/html}
}

@article{Bosshart:2014:PPP:2656877.2656890,
 author = {Bosshart, Pat and Daly, Dan and Gibb, Glen and Izzard, Martin and McKeown, Nick and Rexford, Jennifer and Schlesinger, Cole and Talayco, Dan and Vahdat, Amin and Varghese, George and Walker, David},
 title = {P4: Programming Protocol-independent Packet Processors},
 journal = {SIGCOMM Comput. Commun. Rev.},
 issue_date = {July 2014},
 volume = {44},
 number = {3},
 month = jul,
 year = {2014},
 issn = {0146-4833},
 pages = {87--95},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/2656877.2656890},
 doi = {10.1145/2656877.2656890},
 acmid = {2656890},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {p4, protocol-independent, reconfigurability, sdn},
}

@misc{rfc7047,
	series =	{Request for Comments},
	number =	7047,
	howpublished =	{RFC 7047},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC7047},
	url =		{https://rfc-editor.org/rfc/rfc7047.txt},
        author =	{Ben Pfaff and Bruce Davie},
	title =		{{The Open vSwitch Database Management Protocol}},
	pagetotal =	35,
	year =		2013,
	month =		dec,
	abstract =	{Open vSwitch is an open-source software switch designed to be used as a vswitch (virtual switch) in virtualized server environments. A vswitch forwards traffic between different virtual machines (VMs) on the same physical host and also forwards traffic between VMs and the physical network. Open vSwitch is open to programmatic extension and control using OpenFlow and the OVSDB (Open vSwitch Database) management protocol. This document defines the OVSDB management protocol. The Open vSwitch project includes open-source OVSDB client and server implementations.},
}

@article{Merkel:2014:DLL:2600239.2600241,
 author = {Merkel, Dirk},
 title = {Docker: Lightweight Linux Containers for Consistent Development and Deployment},
 journal = {Linux J.},
 issue_date = {March 2014},
 volume = {2014},
 number = {239},
 month = mar,
 year = {2014},
 issn = {1075-3583},
 articleno = {2},
 url = {http://dl.acm.org/citation.cfm?id=2600239.2600241},
 acmid = {2600241},
 publisher = {Belltown Media},
 address = {Houston, TX},
}

@article{day_osi_1983,
	title = {The {OSI} reference model},
	volume = {71},
	issn = {0018-9219},
	doi = {10.1109/PROC.1983.12775},
	abstract = {The early successes of computer networks in the mid-1970's made it apparent that to utilize the full potential of computer networks, international standards would be required. In 1977, the International Standards Organization (ISO) initiated work on Open Systems Interconnection (OSI) to address these requirements. This paper briefly describes the OSI Reference Model. The OSI Reference Model is the highest level of abstraction in the OSI scheme. The paper first describes the basic building blocks used to construct the network model. Then the particular seven-layer model used by OSI is briefly described, followed by a discussion of outstanding issues and future extensions for the model.},
	number = {12},
	journal = {Proceedings of the IEEE},
	author = {Day, J. D. and Zimmermann, H.},
	month = dec,
	year = {1983},
	keywords = {ARPANET, Communication standards, computer networks, ISO standards, Open systems, Packet switching, Protocols, Springs, Standards development, Standards organizations},
	pages = {1334--1340},
	file = {IEEE Xplore Abstract Record:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/M6BV2MDU/citations.html:text/html}
}

@misc{rfc1157,
	series =	{Request for Comments},
	number =	1157,
	howpublished =	{RFC 1157},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC1157},
	url =		{https://rfc-editor.org/rfc/rfc1157.txt},
        author =	{Mark Fedor and James R. Davin and Martin Lee Schoffstall and Dr. Jeff D. Case},
	title =		{{Simple Network Management Protocol (SNMP)}},
	pagetotal =	36,
	year =		1990,
	month =		may,
	abstract =	{This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. {[}STANDARDS-TRACK{]}},
}
@article{noauthor_ieee_2016,
	title = {{IEEE} {Standard} for {Ethernet}},
	doi = {10.1109/IEEESTD.2016.7428776},
	abstract = {Ethernet local area network operation is specified for selected speeds of operation from 1 Mb/s to 100 Gb/s using a common media access control (MAC) specification and management information base (MIB). The Carrier Sense Multiple Access with Collision Detection (CSMA/CD) MAC protocol specifies shared medium (half duplex) operation, as well as full duplex operation. Speed specific Media Independent Interfaces (MIIs) allow use of selected Physical Layer devices (PHY) for operation over coaxial, twisted pair or fiber optic cables, or electrical backplanes. System considerations for multisegment shared access networks describe the use of Repeaterswhich are defined for operational speeds up to 1000 Mb/s. Local Area Network (LAN) operation is supported at all speeds. Other specified capabilities include: various PHY types for access networks, PHYs suitable for metropolitan area network applications, and the provision of power over selected twisted pair PHY types.},
	journal = {IEEE Std 802.3-2015 (Revision of IEEE Std 802.3-2012)},
	month = mar,
	year = {2016},
	keywords = {10BASE, 10GBASE, 10 Gigabit Ethernet, 40GBASE, 40 Gigabit Ethernet, 100BASE, 100GBASE, 100 Gigabit Ethernet, 1000BASE, attachment unit interface, AUI, Auto Negotiation, Backplane Ethernet, carrier sense multiple access, collision detection, CSMA-CD, data processing, DTE Power via the MDI, electrical backplane, EPON, Ethernet, Ethernet in the First Mile, Ethernet local area network operation, Ethernet passive optical network, Fast Ethernet, fiber optic cable, full duplex operation, Gigabit Ethernet, GMII, half duplex operation, IEEE 802.3 Standard, IEEE 802.3(TM), IEEE Standard, IEEE standards, IEEE Std 802.3-2012, IEEE Std 802.3TM-2015, information exchange, LAN operation, local area network, local area networks, MAC protocol, MAC specification, management, management information base, MDI, media access control specification, media independent interface, medium dependent interface, metropolitan area network application, metropolitan area networks, MIB, MII, multisegment shared access network, optical cables, Passive optical networks, PHY, physical coding sublayer, Physical Layer, physical layer device, physical medium attachment, PMA, Power over Ethernet, repeater, speed specific media independent interface, speed specific MII, Synchronization, Time measurement, twisted pair PHY type, type field, VLAN TAG, XGMII},
	pages = {1--4017},
	file = {IEEE Xplore Abstract Record:/media/Dados/felipe/Documentos/UFES/PG/Zotero/storage/UAH2V6ED/7428776.html:text/html}
}

@misc{rfc826,
	series =	{Request for Comments},
	number =	826,
	howpublished =	{RFC 826},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0826},
	url =		{https://rfc-editor.org/rfc/rfc826.txt},
        author =	{},
	title =		{{An Ethernet Address Resolution Protocol: Or Converting Network Protocol Addresses to 48.bit Ethernet Address for Transmission on Ethernet Hardware}},
	pagetotal =	10,
	year =		1982,
	month =		nov,
	abstract =	{The purpose of this RFC is to present a method of Converting Protocol Addresses (e.g., IP addresses) to Local Network Addresses (e.g., Ethernet addresses). This is an issue of general concern in the ARPA Internet Community at this time. The method proposed here is presented for your consideration and comment. This is not the specification of an Internet Standard.},
}

@article{RASMUSSEN2008617,
title = "Round robin scheduling â a survey",
journal = "European Journal of Operational Research",
volume = "188",
number = "3",
pages = "617 - 636",
year = "2008",
issn = "0377-2217",
doi = "https://doi.org/10.1016/j.ejor.2007.05.046",
url = "http://www.sciencedirect.com/science/article/pii/S0377221707005309",
author = "Rasmus V. Rasmussen and Michael A. Trick",
keywords = "Timetabling, Sports scheduling, Round robin tournaments, Homeâaway patterns"
}

@misc{rfc793,
	series =	{Request for Comments},
	number =	793,
	howpublished =	{RFC 793},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0793},
	url =		{https://rfc-editor.org/rfc/rfc793.txt},
        author =	{},
	title =		{{Transmission Control Protocol}},
	pagetotal =	91,
	year =		1981,
	month =		sep,
	abstract =	{},
}
